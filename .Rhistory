swirl()
3.5
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(low_dice)
expect_dice(dice_low)
.5 *(edh+edl)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
dice_sqr
ex2_fair <- dice_fair *PDF
ex2_fair <- dice_fair * dice_sqr
ex2_fair <- sum(dice_fair * dice_sqr)
ex2_fair - 3.5^2
sum(dice_high * dice_sqr) -edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
sd(apply(matrix(2/sqrt(10),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/2 *sqrt(10)
1/(2 *sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
10 * .8^3 * .2^2
choose(5,3
)
choose(5,3)*.8^3*.2^2 + choose(5,4)*.8^4*.2 +choose(5,5)*.8^5*.2^0
?quantile
quantile(2,5,.8,lower.tail=FALSE)
?pbinom
pbinom(2,5,.8,lower.tail=FALSE)
qnorm(.1)
0
qnorm(.975,mean=3,sd=2)
1.96*2+3
pnorm(1200,1020,50)
pnorm(1200,1020,50,lower.tail=FALSE)
(1200-1020)/50
pnorm((1200-1020)/50,lower.tail=FALSE)
qnorm(.95,1020,50,lower.tail=TRUE)
qnorm(.75,1020,50,lower.tail=TRUE)
pnorm(qnorm(.53))
qnorm(pnorm(.53))
ppois(3,2.5,lower.tail=TRUE,log.p=FALSE)
ppois(3,2.5*4,lower.tail=TRUE,log.p=FALSE)
?
pbinom
pbinom(5,1000,.01)
?ppois
ppois(.05,1000*.01)
ppois(5,1000*.01)
head(pollution)
0
exit()
quit()
devtools::install_github('rstudio/shinyapps')
install.packages('digest')
devtools::install_github('rstudio/shinyapps')
devtools::install_github('rstudio/shinyapps')
install.packages('Rcurl')
devtools::install_github('rstudio/shinyapps')
devtools::install_github('rstudio/shinyapps')
swirl()
library(swirl)
swirl()
ls()
rm(list=ls())
install.packages("devtools")
library(devtools)
install_github("ckt14/tvganesh")
ls()
rm(list=ls())
ls()
library(devtools)
version(XML)
XML
install.packages("RWordPress")
?knowWP
knitWP
?batsman4s
library(cricketer)
library(cricketr)
?getPlayerData
profileNo=35320
home <-getPlayerData(profile=profileNo,dir=".",file="home.csv",homeOrAway=c(1),result=c(1,2,4))
# Get the data for games played overseas
away <-getPlayerData(profile=profileNo,dir=".", file="away.csv",homeOrAway=c(2),result=c(2,4))
home <- clean("./home.csv")
away <- clean("./away.csv")
home
away
home$venue="home"
away$venues="away"
homeAway <- rbind(home,away)
home$venue="home"
away$venue="away"
homeAway <- rbind(home,away)
dim(home)
dim(away)
names(away)
away <-getPlayerData(profile=profileNo,dir=".", file="away.csv",homeOrAway=c(2),result=c(2,4))
home <- clean("./home.csv")
away <- clean("./away.csv")
home$venue="home"
away$venue="away"
homeAway <- rbind(home,away)
name="aaa"
atitle <- paste(name,"- Runs in games at home and overseas")
# Create boxplots
boxplot(Runs~venue,data=homeAway,col=c("blue","green"),xlab="Match venue",
ylab="Runs scored", main=atitle)
# Create boxplots
boxplot(Runs~venue,data=homeAway,col=c("blue","green"),xlab="Match venue",
ylab="Runs scored", main=atitle)
a <- dim(home)
b <- dim(away)
val1 <- paste(b[1], "Overseas")
val2 <- paste(a[1],"Home venue")
vals <- list(val1,val2)
legend(x="top", legend=vals, lty=c(1,1),
lwd=c(7,7),col=c("blue","green"),bty="n")
mtext("Data source-Courtesy:ESPN Cricinfo", side=1, line=4, adj=1.0, cex=1, col="blue")
?gePlayerData
?gePlayerData
?getPlayerData
profileNo <- 30176
home <-getPlayerData(profile=profileNo,dir=".",file="home.csv",homeOrAway=c(1),
result=c(1,2,4),type="bowling")
# Get the data for games played overseas
away <-getPlayerData(profile=profileNo,dir=".", file="away.csv",homeOrAway=c(2),
result=c(2,4),type="bowling")
home <- cleanBowlerData("./home.csv")
away <- cleanBowlerData("./away.csv")
home
home$venue="home"
away$venue="away"
homeAway <- rbind(home,away)
atitle <- paste(name,"- Wickets-Home & overseas")
# Create boxplots
boxplot(Runs~venue,data=homeAway,col=c("blue","green"),xlab="Match venue",
boxplot(Wkts~venue,data=homeAway,col=c("blue","green"),xlab="Match venue",
ylab="Wickets", main=atitle)
a <- dim(home)
boxplot(Wkts~venue,data=homeAway,col=c("blue","green"),xlab="Match venue",
ylab="Wickets", main=atitle)
names(homeAway)
home$venue="Home"
away$venue="Overseas"
homeAway <- rbind(home,away)
atitle <- paste(name,"- Wickets-Home & overseas")
# Create boxplots
boxplot(Wkts~venue,data=homeAway,col=c("blue","green"),xlab="Match venue",
ylab="Wickets", main=atitle)
a <- dim(home)
b <- dim(away)
val1 <- paste(b[1], "Overseas")
val2 <- paste(a[1],"Home venue")
vals <- list(val1,val2)
legend(x="top", legend=vals, lty=c(1,1),
lwd=c(7,7),col=c("blue","green"),bty="n")
mtext("Data source-Courtesy:ESPN Cricinfo", side=1, line=4, adj=1.0, cex=1, col="blue")
rm(list=ls())
q()
q()
23.25/30
q()
library(rgeos)
library(maptools)
library(ggplot2)
remove.packages("scales")
install.packages("ggplot2")
library(rgeos)
library(maptools)
library(ggplot2)
library(dplyr)
library(stringr)
library(reshape2)
library(RColorBrewer)
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
install.packages("shinydashboard")
library(shinydashboard)
shiny::runApp('C:/software/R/india/edu/shiny1')
?dashboardPage
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/edu/shiny1')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shinyapps::showLogs().
shinyapps::showLogs()
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
?replace_str
?replace_str
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
?str_replace
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/test/test1')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy')
rm(list=ls())
shiny::runApp('C:/software/R/india/literacy')
shiny::runApp('C:/software/R/india/literacy1/literacyInIndia')
shiny::runApp('C:/software/R/india/literacy1/literacyInIndia')
shiny::runApp('C:/software/R/india/literacy1/literacyInIndia')
install.packages("mapproj")
install.packages("mapproj")
library(mapproj)
shiny::runApp('C:/software/R/india/literacy1/literacyInIndia')
rm(list=ls())
shiny::runApp('C:/software/R/india/literacy1/literacyInIndia')
shiny::runApp('C:/software/R/india/literacy1/literacyInIndia')
shiny::runApp('C:/software/R/india/literacy1/literacyInIndia')
shiny::runApp('C:/software/R/india/literacy1/literacyInIndia')
shiny::runApp('C:/software/R/india/literacy1/literacyInIndia')
shiny::runApp('C:/software/R/india/literacy1/literacyInIndia')
shiny::runApp('C:/software/R/india/literacy1/literacyInIndia')
>7*19
.7*19
16/19
q()
shiny::runApp('C:/software/R/sixer')
shiny::runApp('C:/software/R/sixer')
?batsman4s
shiny::runApp('C:/software/R/sixer')
shiny::runApp('C:/software/R/sixer')
shiny::runApp('C:/software/R/sixer')
shiny::runApp('C:/software/R/sixer')
shiny::runApp('C:/software/R/sixer')
shiny::runApp('C:/software/R/sixer')
shiny::runApp('C:/software/R/sixer')
shiny::runApp('C:/software/R/sixer')
shiny::runApp('C:/software/R/sixer')
shiny::runApp('C:/software/R/sixer')
?relativeRunsFreqPerf
file <- list("tendulkar.csv","dravid.csv")
names >- list("aaa","bbb")
names -> list("aaa","bbb")
names -> list("aaa","bbb")
names <- list("aaa","bbb")
relativeRunsFreqPerf(file,names)
setwd("C:/software/R/sixer")
relativeRunsFreqPerf(file,names)
frames <- file
for (i in 1:length(frames)) {
# Create run ranges of 10s
g <- seq(from=5,to=395,by=10)
print(length(g))
batsman <- clean(frames[[i]])
# Divide batting into groups of 20 runs
f <- cut(batsman$Runs, breaks=seq(from=0,to=400,by=10))
# Create a table
g <- table(f)
# Compute percentage
percentRuns <- (g/sum(g))*100
# Compute the percent in each run bucket
#pR <- percentRuns(frames[[i]])
#print(pR)
a <- as.data.frame(percentRuns)
print(length(a$Freq))
#Plot for the entire list
if(i==1) {
plot(g,a$Freq, cex=0.8, xlab="Runs", ylab = "Run frequency Percentages (%)", type="l",
lty=1, main = "Relative runs freq (%) vs Runs", ylim=c(0,50),lwd=1)
}
lines(g,a$Freq,col=col1[i], lwd=2.5,lty=1,type="l")
}
i=2
g <- seq(from=5,to=395,by=10)
print(length(g))
batsman <- clean(frames[[i]])
# Divide batting into groups of 20 runs
f <- cut(batsman$Runs, breaks=seq(from=0,to=400,by=10))
# Create a table
g <- table(f)
# Compute percentage
percentRuns <- (g/sum(g))*100
# Compute the percent in each run bucket
#pR <- percentRuns(frames[[i]])
#print(pR)
a <- as.data.frame(percentRuns)
print(length(a$Freq))
#Plot for the entire list
if(i==1) {
plot(g,a$Freq, cex=0.8, xlab="Runs", ylab = "Run frequency Percentages (%)", type="l",
lty=1, main = "Relative runs freq (%) vs Runs", ylim=c(0,50),lwd=1)
}
lines(g,a$Freq,col=col1[i], lwd=2.5,lty=1,type="l")
g
a$Freq
col[2]
col1[2]
col1 = c("red","blue","cyan","black","brown")
lines(g,a$Freq,col=col1[i], lwd=2.5,lty=1,type="l")
lines(g,a$Freq, lwd=2.5,lty=1,type="l")
lines(g,a$Freq, lwd=2.5,lty=1)
lines(g,a$Freq)
class(g)
class(a$Freq)
g
lines(as.vector(g),a$Freq)
lines(as.numeric(g),a$Freq)
g
f
f
g <- seq(from=5,to=395,by=10)
print(length(g))
batsman <- clean(frames[[i]])
# Divide batting into groups of 20 runs
f <- cut(batsman$Runs, breaks=seq(from=0,to=400,by=10))
# Create a table
g <- table(f)
g
frames
names
col1 = c("red","blue","cyan","black","brown")
for (i in 1:length(frames)) {
# Create run ranges of 10s
g <- seq(from=5,to=395,by=10)
# Compute the percent in each run bucket
batsman <- clean(frames[[i]])
# Divide batting into groups of 20 runs
f <- cut(batsman$Runs, breaks=seq(from=0,to=400,by=10))
# Create a table
i <- table(f)
# Compute percentage
percentRuns <- (i/sum(i))*100
pR <- as.data.frame(percentRuns)
#Plot for the entire list
if(i==1) {
plot(g,pR$Freq, cex=0.8, xlab="Runs", ylab = "Run frequency Percentages (%)", type="l",
lty=1, main = "Relative runs freq (%) vs Runs", ylim=c(0,50),lwd=2)
}
lines(g,pR$Freq,col=col1[i], lwd=2.5,lty=1,type="l")
}
type = rep(1,length(frames))
width = rep(2.5,length(frames))
legend(x="right",legend=names, lty=type,
lwd=width,col=col1,bty="n")
mtext("Data source-Courtesy:ESPN Cricinfo", side=1, line=4, adj=1.0, cex=0.8, col="blue")
col1 = c("red","blue","cyan","black","brown")
for (i in 1:length(frames)) {
# Create run ranges of 10s
g <- seq(from=5,to=395,by=10)
# Compute the percent in each run bucket
batsman <- clean(frames[[i]])
# Divide batting into groups of 20 runs
f <- cut(batsman$Runs, breaks=seq(from=0,to=400,by=10))
# Create a table
i <- table(f)
# Compute percentage
percentRuns <- (i/sum(i))*100
pR <- as.data.frame(percentRuns)
#Plot for the entire list
if(i==1) {
plot(g,pR$Freq, cex=0.8, xlab="Runs", ylab = "Run frequency Percentages (%)", type="l",
lty=1, main = "Relative runs freq (%) vs Runs", ylim=c(0,50),lwd=2)
}
lines(g,pR$Freq,col=col1[i], lwd=2.5,lty=1,type="l")
}
type = rep(1,length(frames))
width = rep(2.5,length(frames))
legend(x="right",legend=names, lty=type,
lwd=width,col=col1,bty="n")
col1 = c("red","blue","cyan","black","brown")
for (i in 1:length(frames)) {
# Create run ranges of 10s
g <- seq(from=5,to=395,by=10)
# Compute the percent in each run bucket
batsman <- clean(frames[[i]])
# Divide batting into groups of 20 runs
f <- cut(batsman$Runs, breaks=seq(from=0,to=400,by=10))
# Create a table
m <- table(f)
# Compute percentage
percentRuns <- (m/sum(m))*100
pR <- as.data.frame(percentRuns)
#Plot for the entire list
if(i==1) {
plot(g,pR$Freq, cex=0.8, xlab="Runs", ylab = "Run frequency Percentages (%)", type="l",
lty=1, main = "Relative runs freq (%) vs Runs", ylim=c(0,50),lwd=2)
}
lines(g,pR$Freq,col=col1[i], lwd=2.5,lty=1,type="l")
}
type = rep(1,length(frames))
width = rep(2.5,length(frames))
legend(x="right",legend=names, lty=type,
lwd=width,col=col1,bty="n")
mtext("Data source-Courtesy:ESPN Cricinfo", side=1, line=4, adj=1.0, cex=0.8, col="blue")
